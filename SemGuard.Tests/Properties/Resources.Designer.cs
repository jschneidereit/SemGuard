//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SemGuard.Tests.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SemGuard.Tests.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Reflection;
        ///using System.Runtime.CompilerServices;
        ///using System.Runtime.InteropServices;
        ///
        ///// General Information about an assembly is controlled through the following
        ///// set of attributes. Change these attribute values to modify the information
        ///// associated with an assembly.
        ///[assembly: AssemblyTitle(&quot;Dummy&quot;)]
        ///[assembly: AssemblyDescription(&quot;&quot;)]
        ///[assembly: AssemblyConfiguration(&quot;&quot;)]
        ///[assembly: AssemblyCompany(&quot;&quot;)]
        ///[assembly: AssemblyProduct(&quot;Dummy&quot;)]
        ///[assembly: AssemblyCopyright(&quot;Co [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BaseDUmmyAssemblyInfo {
            get {
                return ResourceManager.GetString("BaseDUmmyAssemblyInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;Project ToolsVersion=&quot;15.0&quot; xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&gt;
        ///  &lt;Import Project=&quot;$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props&quot; Condition=&quot;Exists(&apos;$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props&apos;)&quot; /&gt;
        ///  &lt;PropertyGroup&gt;
        ///    &lt;Configuration Condition=&quot; &apos;$(Configuration)&apos; == &apos;&apos; &quot;&gt;Debug&lt;/Configuration&gt;
        ///    &lt;Platform Condition=&quot; &apos;$(Platform)&apos; == &apos;&apos; &quot;&gt;AnyCPU&lt;/Platform&gt;
        ///    &lt;ProjectGuid&gt;{EF4070CF [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BaseDummyCsproj {
            get {
                return ResourceManager.GetString("BaseDummyCsproj", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] BaseDummyCsprojTopo {
            get {
                object obj = ResourceManager.GetObject("BaseDummyCsprojTopo", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///using System.Threading.Tasks;
        ///
        ///namespace Dummy
        ///{
        ///    public class SemVerTest
        ///    {
        ///        public string Name() =&gt; &quot;SemVerTest&quot;;
        ///
        ///        public string Hello() =&gt; &quot;Hello&quot;;
        ///
        ///        public string Parameters(int x, int y) =&gt; $&quot;{x} + {y} = ayyy {x + y}&quot;;
        ///
        ///        private void DoesNotExist(int x, int y, int z) { }
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string BaseDummySemVerTest {
            get {
                return ResourceManager.GetString("BaseDummySemVerTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] BaseDummySln {
            get {
                object obj = ResourceManager.GetObject("BaseDummySln", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;configuration&gt;
        ///    &lt;startup&gt; 
        ///        &lt;supportedRuntime version=&quot;v4.0&quot; sku=&quot;.NETFramework,Version=v4.5.2&quot; /&gt;
        ///    &lt;/startup&gt;
        ///&lt;/configuration&gt;.
        /// </summary>
        internal static string DummyTwoAppConfig {
            get {
                return ResourceManager.GetString("DummyTwoAppConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Reflection;
        ///using System.Runtime.CompilerServices;
        ///using System.Runtime.InteropServices;
        ///
        ///// General Information about an assembly is controlled through the following
        ///// set of attributes. Change these attribute values to modify the information
        ///// associated with an assembly.
        ///[assembly: AssemblyTitle(&quot;DummyTwo&quot;)]
        ///[assembly: AssemblyDescription(&quot;&quot;)]
        ///[assembly: AssemblyConfiguration(&quot;&quot;)]
        ///[assembly: AssemblyCompany(&quot;&quot;)]
        ///[assembly: AssemblyProduct(&quot;DummyTwo&quot;)]
        ///[assembly: AssemblyCopyrig [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DummyTwoAssemblyInfo {
            get {
                return ResourceManager.GetString("DummyTwoAssemblyInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;Project ToolsVersion=&quot;15.0&quot; xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&gt;
        ///  &lt;Import Project=&quot;$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props&quot; Condition=&quot;Exists(&apos;$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props&apos;)&quot; /&gt;
        ///  &lt;PropertyGroup&gt;
        ///    &lt;Configuration Condition=&quot; &apos;$(Configuration)&apos; == &apos;&apos; &quot;&gt;Debug&lt;/Configuration&gt;
        ///    &lt;Platform Condition=&quot; &apos;$(Platform)&apos; == &apos;&apos; &quot;&gt;AnyCPU&lt;/Platform&gt;
        ///    &lt;ProjectGuid&gt;{8CC82EBD [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DummyTwoDummyTwo {
            get {
                return ResourceManager.GetString("DummyTwoDummyTwo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///using System.Threading.Tasks;
        ///
        ///namespace DummyTwo
        ///{
        ///    class Program
        ///    {
        ///        static void Main(string[] args)
        ///        {
        ///        }
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string DummyTwoProgram {
            get {
                return ResourceManager.GetString("DummyTwoProgram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Reflection;
        ///using System.Runtime.CompilerServices;
        ///using System.Runtime.InteropServices;
        ///
        ///// General Information about an assembly is controlled through the following
        ///// set of attributes. Change these attribute values to modify the information
        ///// associated with an assembly.
        ///[assembly: AssemblyTitle(&quot;Dummy&quot;)]
        ///[assembly: AssemblyDescription(&quot;&quot;)]
        ///[assembly: AssemblyConfiguration(&quot;&quot;)]
        ///[assembly: AssemblyCompany(&quot;Vagrant&quot;)]
        ///[assembly: AssemblyProduct(&quot;Dummy&quot;)]
        ///[assembly: AssemblyCopyri [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MajorDummyAssemblyInfo {
            get {
                return ResourceManager.GetString("MajorDummyAssemblyInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;Project ToolsVersion=&quot;15.0&quot; xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&gt;
        ///  &lt;Import Project=&quot;$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props&quot; Condition=&quot;Exists(&apos;$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props&apos;)&quot; /&gt;
        ///  &lt;PropertyGroup&gt;
        ///    &lt;Configuration Condition=&quot; &apos;$(Configuration)&apos; == &apos;&apos; &quot;&gt;Debug&lt;/Configuration&gt;
        ///    &lt;Platform Condition=&quot; &apos;$(Platform)&apos; == &apos;&apos; &quot;&gt;AnyCPU&lt;/Platform&gt;
        ///    &lt;ProjectGuid&gt;{29B7E51B [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MajorDummyCsproj {
            get {
                return ResourceManager.GetString("MajorDummyCsproj", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///using System.Threading.Tasks;
        ///
        ///namespace Dummy
        ///{
        ///	public class SemVerTest
        ///	{
        ///		public string Name() =&gt; &quot;SemVerTest&quot;;
        ///
        ///		public string Hello() =&gt; &quot;Hello&quot;;
        ///
        ///		public string Parameters(int x) =&gt; $&quot;{x} + nothing = {x}&quot;;
        ///
        ///		private void DoesNotExist(int x, int y, int z) { }
        ///	}
        ///}
        ///.
        /// </summary>
        internal static string MajorDummySemVerTest {
            get {
                return ResourceManager.GetString("MajorDummySemVerTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] MajorDummySln {
            get {
                object obj = ResourceManager.GetObject("MajorDummySln", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Reflection;
        ///using System.Runtime.CompilerServices;
        ///using System.Runtime.InteropServices;
        ///
        ///// General Information about an assembly is controlled through the following
        ///// set of attributes. Change these attribute values to modify the information
        ///// associated with an assembly.
        ///[assembly: AssemblyTitle(&quot;Dummy&quot;)]
        ///[assembly: AssemblyDescription(&quot;&quot;)]
        ///[assembly: AssemblyConfiguration(&quot;&quot;)]
        ///[assembly: AssemblyCompany(&quot;Vagrant&quot;)]
        ///[assembly: AssemblyProduct(&quot;Dummy&quot;)]
        ///[assembly: AssemblyCopyri [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MinorDummyAssemblyInfo {
            get {
                return ResourceManager.GetString("MinorDummyAssemblyInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;Project ToolsVersion=&quot;15.0&quot; xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&gt;
        ///  &lt;Import Project=&quot;$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props&quot; Condition=&quot;Exists(&apos;$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props&apos;)&quot; /&gt;
        ///  &lt;PropertyGroup&gt;
        ///    &lt;Configuration Condition=&quot; &apos;$(Configuration)&apos; == &apos;&apos; &quot;&gt;Debug&lt;/Configuration&gt;
        ///    &lt;Platform Condition=&quot; &apos;$(Platform)&apos; == &apos;&apos; &quot;&gt;AnyCPU&lt;/Platform&gt;
        ///    &lt;ProjectGuid&gt;{A2259BAD [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MinorDummyCsproj {
            get {
                return ResourceManager.GetString("MinorDummyCsproj", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///using System.Threading.Tasks;
        ///
        ///namespace Dummy
        ///{
        ///	public class SemVerTest
        ///	{
        ///		public string Name() =&gt; &quot;SemVerTest&quot;;
        ///
        ///		public string Hello() =&gt; &quot;Hello&quot;;
        ///
        ///		public string Parameters(int x, int y) =&gt; $&quot;{x} + {y} = {x + y}&quot;;
        ///
        ///		public string Goodbye() =&gt; &quot;See ya&quot;;
        ///
        ///		private void DoesNotExist(int x, int y) { } //private api removal here
        ///	}
        ///}
        ///.
        /// </summary>
        internal static string MinorDummySemVerTest {
            get {
                return ResourceManager.GetString("MinorDummySemVerTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] MinorDummySln {
            get {
                object obj = ResourceManager.GetObject("MinorDummySln", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Reflection;
        ///using System.Runtime.CompilerServices;
        ///using System.Runtime.InteropServices;
        ///
        ///// General Information about an assembly is controlled through the following
        ///// set of attributes. Change these attribute values to modify the information
        ///// associated with an assembly.
        ///[assembly: AssemblyTitle(&quot;Dummy&quot;)]
        ///[assembly: AssemblyDescription(&quot;&quot;)]
        ///[assembly: AssemblyConfiguration(&quot;&quot;)]
        ///[assembly: AssemblyCompany(&quot;Vagrant&quot;)]
        ///[assembly: AssemblyProduct(&quot;Dummy&quot;)]
        ///[assembly: AssemblyCopyri [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PatchDummyAssemblyInfo {
            get {
                return ResourceManager.GetString("PatchDummyAssemblyInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;Project ToolsVersion=&quot;15.0&quot; xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&gt;
        ///  &lt;Import Project=&quot;$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props&quot; Condition=&quot;Exists(&apos;$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props&apos;)&quot; /&gt;
        ///  &lt;PropertyGroup&gt;
        ///    &lt;Configuration Condition=&quot; &apos;$(Configuration)&apos; == &apos;&apos; &quot;&gt;Debug&lt;/Configuration&gt;
        ///    &lt;Platform Condition=&quot; &apos;$(Platform)&apos; == &apos;&apos; &quot;&gt;AnyCPU&lt;/Platform&gt;
        ///    &lt;ProjectGuid&gt;{D8A23A74 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PatchDummyCsproj {
            get {
                return ResourceManager.GetString("PatchDummyCsproj", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///using System.Threading.Tasks;
        ///
        ///namespace Dummy
        ///{
        ///    public class SemVerTest
        ///    {
        ///		public string Name() =&gt; &quot;SemVerTest&quot;;
        ///
        ///		public string Hello() =&gt; &quot;Hello&quot;;
        ///
        ///		public string Parameters(int x, int y) =&gt; $&quot;{x} + {y} = {x + y}&quot;;
        ///
        ///		private void DoesNotExist(int x, int y, int z) { }
        ///	}
        ///}
        ///.
        /// </summary>
        internal static string PatchDummySemVerTest {
            get {
                return ResourceManager.GetString("PatchDummySemVerTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] PatchDummySln {
            get {
                object obj = ResourceManager.GetObject("PatchDummySln", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] SemGuard_Lib {
            get {
                object obj = ResourceManager.GetObject("SemGuard_Lib", resourceCulture);
                return ((byte[])(obj));
            }
        }
    }
}
